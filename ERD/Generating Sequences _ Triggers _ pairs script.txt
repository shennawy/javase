-- Create a table using dynamic SQL

CREATE OR REPLACE PROCEDURE OE.GENERATE_SEQ_TRIGGERS_PAIR
IS
    P_TABLE_NAME VARCHAR2(100);
    P_COLUMN_NAME VARCHAR2(100);

    CURSOR SCHEMA_TABLES_CURSOR IS
    SELECT UCC.TABLE_NAME, COLUMN_NAME
INTO P_TABLE_NAME, P_COLUMN_NAME
FROM USER_CONSTRAINTS UC, USER_CONS_COLUMNS UCC
WHERE UC.CONSTRAINT_NAME = UCC.CONSTRAINT_NAME
AND UC.CONSTRAINT_TYPE = 'P';


BEGIN

FOR SCHEMA_TABLES_RECORD IN SCHEMA_TABLES_CURSOR LOOP

  EXECUTE IMMEDIATE ' 
             CREATE SEQUENCE OE.'||SCHEMA_TABLES_RECORD.TABLE_NAME||'_SEQ'||'
         START WITH 100
        MAXVALUE 999999999999999999999999999
            MINVALUE 1
            NOCYCLE
            CACHE 20
            NOORDER';
            
            
            
EXECUTE IMMEDIATE '
CREATE TRIGGER OE.'||SCHEMA_TABLES_RECORD.TABLE_NAME||'_TRG'||'
        BEFORE INSERT
        ON OE.'||SCHEMA_TABLES_RECORD.TABLE_NAME||'
        REFERENCING NEW AS New OLD AS Old
        FOR EACH ROW
        BEGIN
        if :new.'||SCHEMA_TABLES_RECORD.COLUMN_NAME|| ' is null then
      :new.'||SCHEMA_TABLES_RECORD.COLUMN_NAME||' := '||SCHEMA_TABLES_RECORD.TABLE_NAME||'_SEQ.nextval;
        end if;
    END '||SCHEMA_TABLES_RECORD.TABLE_NAME||'_TRG;';
            
       END LOOP;
END;
/

SELECT * FROM USER_ERRORS;


EXECUTE GENERATE_SEQ_TRIGGERS_PAIR;